library(readxl)
data <- read_excel("C:/Users/user/Desktop/data.xlsx",
col_types = c("numeric", "numeric"))
View(data)
library(readxl)
data <- read_excel("C:/Users/user/Desktop/data.xlsx",
col_types = c("numeric"))
View(data)
histogram(data)
hist(data)
hist(data$Age)
qqnorm(data)
qqnorm(data$Age)
shapiro.test(data$Age)
install.packages(c("rsconnect", "shiny", "shinydashboard", "readxl", "xlsx", "reshape2", "dplr"))
library(shiny)
runExample
runExample()
runExample(01_hello)
runExample('01_hello')
runApp('C:/prototype')
install.packages('dplyr')
runApp('C:/prototype')
runApp()
runApp('C:/prototype')
library(readxl)
X2021_07_24_072421_0187_0279 <- read_excel("C:/prototype/2021-07-24 072421 0187-0279.xls",
skip = 44)
View(X2021_07_24_072421_0187_0279)
df <- X2021_07_24_072421_0187_0279
library(dplyr)
df %>% filter(`Target Name` == 'E')
select(df, -c('CT'))
df
select(df, -c('CT'))
df %>% filter(`Target Name` == 'E') %>% select(df, -3)
df %>% filter(`Target Name` == 'E') %>% select(df, -c('CT'))
df %>% filter(`Target Name` == 'E') %>% select(-c('CT'))
result_header <- c("#", "Barcodes", "Lab ID", "E", "N", "RdRp", "GAPDH", "Interpretation", "Assay", "Date", "Used Extraction Instrument", "Used PCR Instrument")
result_df <- setNames(data.frame(matrix(ncol=12, nrow=0)), result_header)
result_df
View(result_df)
result_df$E
df %>% filter(`Target Name` == 'E') %>% select(-c(3))
View(df)
eData <- df %>% filter(`Target Name` == 'E', ignore.case = TRUE) %>% select(-c(3))
eData
View(eData)
nData <- df %>% filter(`Target Name` == 'N',ignore.case = TRUE) %>% select(-c(3))
rdData <- df %>% filter(`Target Name` == 'RdRp',ignore.case = TRUE) %>% select(-c(3))
View(rdData)
eData[1]
View(df)
gapData <- df %>% filter(`Target Name` == 'GAPDH',ignore.case = TRUE) %>% select(-c(4))
View(gapData)
result_df$`Lab ID` <- eData[1]
View(df)
View(result_df)
result_df$`Lab ID` <- eData$`Sample Name`
colnames(eData)
colnames(eData)[1]
colnames(eData)[1] <- "Lab ID"
eData
res <- cbind(eData$`Lab ID`, eData$`Ct Mean`, nData$`Ct Mean`, rdData$`Ct Mean`, gapData$CT)
res
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
round_df(res,1)
res <- cbind('Lab Id'=eData$`Lab ID`, eData$`Ct Mean`, nData$`Ct Mean`, rdData$`Ct Mean`, gapData$CT)
res
res <- cbind('Lab Id'=eData$`Lab ID`, 'E'=eData$`Ct Mean`, 'N'=nData$`Ct Mean`, 'RdRp'=rdData$`Ct Mean`, 'GAPDH'=gapData$CT)
res
rbind(result_df, res)
a <- rbind(result_df, res)
View(a)
library(tibble)
runApp('C:/prototype')
runApp('C:/prototype')
runApp('C:/prototype')
res = data.frame()
res
runApp('C:/prototype')
runApp('C:/prototype')
View(a)
a
cbind('#', Barcodes',a,'Interpretation', 'Assay'')
cbind('#', Barcodes',a,'Interpretation', 'Assay')
cbind('#'=NA, Barcodes',a,'Interpretation', 'Assay')
cbind('#'=NA, Barcodes'=NA,a,'Interpretation', 'Assay')
cbind('#'=NA, Barcodes'=NA,a)
ddd <- cbind('#'=NA, Barcodes'=NA,a)
ddd <- cbind('#'='NA', Barcodes'='NA',a)
ddd <- cbind('#', 'Barcodes',a)
ddd
ddd <- cbind('#', 'Barcodes'=NULL,a)
ddd <- cbind('#', 'Barcodes'=NA,a)
ddd
ddd <- cbind('#'=NA, 'Barcodes'=NA,a)
ddd
View(ddd)
runApp('C:/prototype')
rsconnect::setAccountInfo(name='fiveparametric',
token='735FB1D1F3F5F8D7F6B5526F64216674',
secret='itC+qxso4FwToo9t/1OnosKBo7Hv/Sa/NJC/fHPn')
deployApp()
library(rsconnect)
deployApp()
deployApp()
shiny::runApp('C:/prototype/triodx_data_merge_prototype')
library(readxl)
result <- read_excel("C:/Users/user/Desktop/result.xlsx")
View(result)
library(readxl)
index <- read_excel("C:/Users/user/Desktop/index.xlsx")
View(index)
View(index)
index_names <- paste0(index$Index, '\\b')
rowNum <- nrow(index)
count <- c()
for (i in 1:rowNum) {
tt <- result %>% filter(grepl(pattern=index_names[i], `Result`,ignore.case = TRUE))
#tt <- result %>% filter(!grepl(pattern='H103\\b', `Result`))
countHowMany <- nrow(tt)
count <- c(count, countHowMany)
}
View(tt)
View(result)
d <- c(index, count)
View(d)
d <- cbind(index, count)
View(d)
View(d)
View(d)
d <- d %>% filter(!grepl(pattern='H103\\b', `'Index`, ignore.case=TRUE))
d <- d %>% filter(!grepl(pattern='H103\\b', `Index`, ignore.case=TRUE))
View(d)
d <- d %>% filter(!grepl(pattern='H103\\b', `Index`, ignore.case=TRUE))
d <- d %>% filter(!grepl(pattern='H66\\b', `Index`, ignore.case=TRUE))
d <- d %>% filter(!grepl(pattern='H54\\b', `Index`, ignore.case=TRUE))
View(result)
res <- result %>% str_remove_all(pattern='H103\\b', `Result`)
res <- result %>% str_remove_all(pattern='H103\\b', string=`Result`)
View(result)
res <- result %>% str_remove_all(Result, pattern='H103\\b')
res <- result %>% str_remove_all(string=Result, pattern='H103\\b')
res <- result %>% str_remove_all(result$Result, pattern='H103\\b')
result$Result
View(d)
res <- gsub('H66 \\d', "", result$Result)
gsub('H66 \\d', "", result$Result)
res <- gsub('H66 \\d', "", result$Result)
res <- gsub('H103 \\d', "", res)
res <- gsub('H54 \\d', "", res)
res
result <- cbind(result, res)
View(result)
View(result)
library(xlsx)
write.xlsx(result, "stat.xlsx")
runApp('C:/prototype/triodx_data_merge_prototype')
library(readxl)
format1 <- read_excel("C:/prototype/format1.xlsx")
View(format1)
library(readxl)
format4_random <- read_excel("C:/prototype/format4_random.xlsx")
View(format4_random)
View(format1)
format1$`Lab ID`
format1$`Lab ID`[1]
is.na(format1$`Lab ID`[1])
is.null(format1$`Lab ID`[1])
grepl(format4_random$`Lab ID`, pattern='072421-0004')
grepl(format4_random$`Lab ID`, pattern='072421-0045')
which('072421-0045' %in% format4_random$`Lab ID`)
which('072421-0045' == format4_random$`Lab ID`)
format4_random$`Lab ID`[7]
library(readxl)
format4_random <- read_excel("C:/prototype/format4_random.xlsx")
View(format4_random)
which('072421-0045' == format4_random$`Lab ID`)
dd <- which('072421-0045' == format4_random$`Lab ID`)
dd
dd[1]
dd[2]
ss <- which('072421-0046' == format4_random$`Lab ID`)
ss
ss[1]
ss[2]
length(ss)
length(dd)
runApp('C:/prototype/triodx_data_merge_prototype')
View(format4_random)
View(format1)
library(readxl)
format3 <- read_excel("C:/prototype/format3.xlsx")
View(format3)
which(format4_random$`Lab ID` ==  format3$`Lab ID`)
which(format4_random$`Lab ID`[1] ==  format3$`Lab ID`)
format4_random$`Lab ID`[1]
format3$`Lab ID`[39]
len <- which(format4_random$`Lab ID`[1] ==  format3$`Lab ID`)
len
len <- length(which(format4_random$`Lab ID`[1] ==  format3$`Lab ID`))
len
len == 1
runApp('C:/prototype/triodx_data_merge_prototype')
runApp('C:/prototype/triodx_data_merge_prototype')
library(rsconnect)
deployApp()
deployApp()
library(shiny)
library(rsconnect)
deployApp()
setwd("C:/prototype/triodx_data_merge_prototype")
deployApp()
runApp()
runApp()
